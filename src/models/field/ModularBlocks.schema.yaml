type: object

description: |
  The Modular Blocks field allows content managers to dynamically create and
  modify components of a page or app on the go.

allOf: [$ref: './StandardField.schema.yaml']

required: [data_type, blocks]

properties:
  data_type: { const: blocks }
  abstract: { type: string }

  blocks:
    type: array
    items:
      oneOf:
        - type: object
          required: [reference_to, title, uid]
          properties:
            reference_to: { type: string }
            title: { type: string }
            uid: { type: string }

        - type: object
          required: [schema, title, uid]
          properties:
            autoEdit: { type: boolean }
            title: { type: string }
            uid: { type: string }
            schema:
              type: array
              items:
                oneOf:
                  - $ref: './Boolean.schema.yaml'
                  - $ref: './Date.schema.yaml'
                  - $ref: './Extension.schema.yaml'
                  - $ref: './File.schema.yaml'
                  - $ref: './HtmlRte.schema.yaml'
                  - $ref: './JsonRte.schema.yaml'
                  - $ref: './Link.schema.yaml'
                  - $ref: './Markdown.schema.yaml'
                  - $ref: './Number.schema.yaml'
                  - $ref: './Reference.schema.yaml'
                  - $ref: './Select.schema.yaml'
                  - $ref: './TextBox.schema.yaml'

                  # Note: Group and ModularBlock types are also allowed
                  # here by Contentstack, but including them currently
                  # causes an error in json2ts because of the circular
                  # references.
                  #
                  # - $ref: "./Group.schema.yaml"
                  # - $ref: "./ModularBlocks.schema.yaml"
